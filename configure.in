# Process this file with autoconf to produce a configure script.

# initialization
AC_PREREQ(2.57)
AC_INIT([wxsvg], [1.1.4], [wx-svg-users@lists.sourceforge.net])
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE(foreign)
AM_MAINTAINER_MODE

# library versioning (quoted from libtool doc)
# 1. Update the version information only immediately before a public release
# 2. If the library source code has changed then increment revision (`c:r:a' becomes `c:r+1:a').
# 3. If any interfaces have been added, removed, or changed since the last update, increment current,
#    and set revision to 0.
# 4. If any interfaces have been added since the last public release, then increment age.
# 5. If any interfaces have been removed since the last public release then set age to 0.

LIBRARY_VERSION=3:0:3 # current:revision:age -> libwxsvg.so.(C-A).(A).(R)
AC_SUBST(LIBRARY_VERSION)

# options
AM_OPTIONS_WXCONFIG
AC_ARG_ENABLE(debug,
 [  --enable-debug          Enable debugging information],
 USE_DEBUG="$enableval", USE_DEBUG="no")
AC_ARG_ENABLE(render,
 [  --enable-render[=render]          Specify the render: cairo (default), libart or agg],
 [USE_RENDER=$enableval], [USE_RENDER=cairo])
AC_ARG_ENABLE(ffmpeg,
 [  --enable-ffmpeg         Enable ffmpeg decoder support (default: enabled)],
 [enable_ffmpeg=$enableval],[enable_ffmpeg=yes])
AC_ARG_WITH(datarootdir,
 [  --with-datarootdir=DIR  Use DIR as the data root [[PREFIX/share]]],
 [datarootdir="\${prefix}/$with_datarootdir"], [datarootdir='$(prefix)/share'])
AC_SUBST(datarootdir)

AC_MSG_CHECKING(for install location)
case "$prefix" in
NONE)	AC_CACHE_VAL(m_cv_prefix,m_cv_prefix=$ac_default_prefix);;
*)	m_cv_prefix=$prefix ;;
esac
AC_MSG_RESULT($m_cv_prefix)
case "$m_cv_prefix" in /*) ;; *)
	AC_MSG_WARN([--prefix=$prefix must be an absolute path name, using $ac_default_prefix])
	m_cv_prefix=$ac_default_prefix
esac
prefix=$m_cv_prefix


# Checks for programs.
AC_LANG_CPLUSPLUS
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CXXCPP
PKG_PROG_PKG_CONFIG()

# Check for libtool
m4_pattern_allow([AC_PROG_LIBTOOL])
AC_PROG_LIBTOOL

# debug flags
case "$USE_DEBUG" in
yes)
  DEBUG_FLAGS="-g -Wall -DDEBUG"
  ;;    
*)
  DEBUG_FLAGS=""
  ;;
esac

# render
AM_CONDITIONAL(USE_RENDER_AGG, [test "$USE_RENDER" = "agg"])
AM_CONDITIONAL(USE_RENDER_CAIRO, [test "$USE_RENDER" = "cairo"])
AM_CONDITIONAL(USE_RENDER_LIBART, [test "$USE_RENDER" = "libart"])
case "$USE_RENDER" in
libart)
  # check for libart library
  AC_CHECK_PROG(LIBART_CONFIG, libart2-config, yes, no)
  if test $LIBART_CONFIG = no; then
    AC_MSG_ERROR([
      wxSVG requires libart library.
      Please check that libart2-config is in path.
    ])
  fi
  LIBART_CFLAGS="`libart2-config --cflags` $CXXFLAGS"
  LIBART_LIBS="`libart2-config --libs` $LIBS"
  AC_SUBST(LIBART_CFLAGS)
  AC_SUBST(LIBART_LIBS)
  CXXFLAGS="$CXXFLAGS -DUSE_RENDER_LIBART"
  font_engine=freetype
  ;;
agg)
  # check for agg
  AC_CHECK_LIBAGG( 2.5, [], [AC_MSG_ERROR([*** missing library AGG])])
  CXXFLAGS="$CXXFLAGS -DUSE_RENDER_AGG $LIBAGG_CFLAGS"
  LDFLAGS="$LDFLAGS $LIBAGG_LIBS"
  case "$host" in
    *mingw*)
    font_engine=fontwin32tt_agg
    ;;
    *)
    font_engine=freetype
    ;;
  esac
  ;;
cairo)
  # check for cairo
  PKG_CHECK_MODULES(CAIRO, cairo)
  CXXFLAGS="$CXXFLAGS $CAIRO_CFLAGS -DUSE_RENDER_CAIRO"
  LIBS="$LIBS $CAIRO_LIBS"
  font_engine=pango
  ;;
*)
  AC_MSG_ERROR([*** Unknown render "$USE_RENDER"])
  ;;
esac

# Font_engine
case "$font_engine" in
freetype)
  # check for pango and freetype library
  PKG_CHECK_MODULES(PANGO, pangoft2)
  PKG_CHECK_MODULES(FONTCONFIG, fontconfig)
  AC_CHECK_PROG(FREETYPE_CONFIG, freetype-config, yes, no)
  if test $FREETYPE_CONFIG = no; then
    AC_MSG_ERROR([
      wxSVG requires freetype library.
      Please check that freetype-config is in path.
    ])
  fi
  FREETYPE_CFLAGS="`freetype-config --cflags` $CXXFLAGS $FONTCONFIG_CFLAGS $PANGO_CFLAGS"
  FREETYPE_LIBS="`freetype-config --libs` $LIBS $FONTCONFIG_LIBS $PANGO_LIBS"
  AC_SUBST(FREETYPE_CFLAGS)
  AC_SUBST(FREETYPE_LIBS)
  ;;
fontfreetype_agg)
  AC_CHECK_PROG(FREETYPE_CONFIG, freetype-config, yes, no)
  if test $FREETYPE_CONFIG = no; then
    AC_MSG_ERROR([
      wxSVG requires freetype library.
      Please check that freetype-config is in path.
    ])
  fi
  FREETYPE_CFLAGS="`freetype-config --cflags`"
  CXXFLAGS="$CXXFLAGS $FREETYPE_CFLAGS"
  LIBS="$LIBS -laggfontfreetype"
  ;;
fontwin32tt_agg)
  LIBS="$LIBS -laggfontwin32tt"
  ;;
pango)
  PKG_CHECK_MODULES(PANGO, pango)
  CXXFLAGS="$CXXFLAGS $PANGO_CFLAGS"
  LIBS="$LIBS $PANGO_LIBS"
  ;;
*)
  ;;
esac
AM_CONDITIONAL(USE_FREETYPE, [test "$font_engine" = "freetype"])

# check wxWidgets >= 2.6.3
AM_PATH_WXCONFIG(2.6.3, WXFOUND=1)
if test "$WXFOUND" != 1; then
    AC_MSG_ERROR([
        Please check that wx-config is in path, the directory
        where wxWidgets libraries are installed (returned by
        'wx-config --libs' command) is in LD_LIBRARY_PATH or
        equivalent variable and wxWidgets is version 2.6.3 or above.
    ])
fi
CXXFLAGS="$CXXFLAGS $DEBUG_FLAGS $WX_CXXFLAGS "
LIBS="$LIBS $WX_LIBS"

# check expat
AC_CHECK_LIB([expat],[XML_ParserCreate],[],[AC_MSG_ERROR([*** missing expat library])])
AC_CHECK_HEADER([expat.h],[],[AC_MSG_ERROR([*** missing expat library])])

# check ffmpg
AM_CONDITIONAL(USE_FFMPEG, [test x$enable_ffmpeg = xyes])
if test x$enable_ffmpeg = xyes; then
  PKG_CHECK_MODULES(FFMPEG, [libavformat >= 50.0.0 libavcodec >= 51.0.0 libavutil >= 49.0.0 libswscale])
  CXXFLAGS="$CXXFLAGS -DUSE_FFMPEG $FFMPEG_CFLAGS"
  LIBS="$LIBS $FFMPEG_LIBS"
fi

# vars
AC_SUBST(LDFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(WX_CONFIG_NAME)

# create Makefiles
AC_OUTPUT([
  Makefile
  libwxsvg.pc
  include/Makefile
  include/wxSVGXML/Makefile
  include/wxSVG/Makefile
  src/svgxml/Makefile
  src/Makefile
  src/agg/Makefile
  src/cairo/Makefile
  src/libart/Makefile
  src/freetype/Makefile
  svgview/Makefile
])
