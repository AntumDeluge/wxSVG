//////////////////////////////////////////////////////////////////////////////
// Name:        SVGFEGaussianBlurElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_FE_GAUSSIAN_BLUR_ELEMENT_H
#define WX_SVG_FE_GAUSSIAN_BLUR_ELEMENT_H

#include "SVGElement.h"
#include "SVGFilterPrimitiveStandardAttributes.h"
#include "SVGAnimatedString.h"
#include "SVGAnimatedNumber.h"
#include "String.h"

class wxSVGFEGaussianBlurElement:
  public wxSVGElement,
  public wxSVGFilterPrimitiveStandardAttributes
{
  protected:
    wxSVGAnimatedString m_in1;
    wxSVGAnimatedNumber m_stdDeviationX;
    wxSVGAnimatedNumber m_stdDeviationY;

  public:
    inline const wxString& GetIn1() { return m_in1.GetBaseVal(); }
    inline void SetIn1(const wxString& n) { m_in1.GetBaseVal() = n; }

    inline float GetStdDeviationX() const { return m_stdDeviationX.GetBaseVal(); }
    inline void SetStdDeviationX(const float n) { m_stdDeviationX.GetBaseVal() = n; }

    inline float GetStdDeviationY() const { return m_stdDeviationY.GetBaseVal(); }
    inline void SetStdDeviationY(const float n) { m_stdDeviationY.GetBaseVal() = n; }

  public:
    inline const wxString& GetAnimatedIn1() { return m_in1.GetAnimVal(); }
    inline void SetAnimatedIn1(const wxString& n) { m_in1.GetAnimVal() = n; }

    inline float GetAnimatedStdDeviationX() const { return m_stdDeviationX.GetAnimVal(); }
    inline void SetAnimatedStdDeviationX(const float n) { m_stdDeviationX.GetAnimVal() = n; }

    inline float GetAnimatedStdDeviationY() const { return m_stdDeviationY.GetAnimVal(); }
    inline void SetAnimatedStdDeviationY(const float n) { m_stdDeviationY.GetAnimVal() = n; }

  public:
    wxSVGFEGaussianBlurElement(wxSVGDocument* doc, wxString tagName = wxT("feGaussianBlur")):
      wxSVGElement(doc, tagName) {}
    virtual ~wxSVGFEGaussianBlurElement() {}
    wxXmlNode* CloneNode(bool deep = true) { return new wxSVGFEGaussianBlurElement(*this); }
    virtual void SetStdDeviation(float stdDeviationX, float stdDeviationY);
    bool SetAttribute(const wxString& name, const wxString& value);
    virtual const wxSVGDTD GetDtd() const { return wxSVG_FEGAUSSIANBLUR_ELEMENT; }
};

#endif // WX_SVG_FE_GAUSSIAN_BLUR_ELEMENT_H
