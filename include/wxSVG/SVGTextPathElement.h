//////////////////////////////////////////////////////////////////////////////
// Name:        SVGTextPathElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_TEXT_PATH_ELEMENT_H
#define WX_SVG_TEXT_PATH_ELEMENT_H

#include "SVGTextContentElement.h"
#include "SVGURIReference.h"
#include "SVGAnimatedLength.h"
#include "SVGAnimatedEnumeration.h"
#include "String.h"

class wxSVGTextPathElement:
  public wxSVGTextContentElement,
  public wxSVGURIReference
{
  public:

	enum wxTEXTPATH_METHODTYPE
	{
	  wxTEXTPATH_METHODTYPE_UNKNOWN = 0,
	  wxTEXTPATH_METHODTYPE_ALIGN = 1,
	  wxTEXTPATH_METHODTYPE_STRETCH = 2
	};


	enum wxTEXTPATH_SPACINGTYPE
	{
	  wxTEXTPATH_SPACINGTYPE_UNKNOWN = 0,
	  wxTEXTPATH_SPACINGTYPE_AUTO = 1,
	  wxTEXTPATH_SPACINGTYPE_EXACT = 2
	};

  protected:
	wxSVGAnimatedLength m_startOffset;
	wxSVGAnimatedEnumeration m_method;
	wxSVGAnimatedEnumeration m_spacing;

  public:
	inline wxSVGLength& GetStartOffset() { return m_startOffset.GetBaseVal(); }
	inline void SetStartOffset(const wxSVGLength& n) { m_startOffset.GetBaseVal() = n; }

	inline char GetMethod() const { return m_method.GetBaseVal(); }
	inline void SetMethod(const char n) { m_method.GetBaseVal() = n; }

	inline char GetSpacing() const { return m_spacing.GetBaseVal(); }
	inline void SetSpacing(const char n) { m_spacing.GetBaseVal() = n; }

  public:
	inline wxSVGLength& GetAnimatedStartOffset() { return m_startOffset.GetAnimVal(); }
	inline void SetAnimatedStartOffset(const wxSVGLength& n) { m_startOffset.GetAnimVal() = n; }

	inline char GetAnimatedMethod() const { return m_method.GetAnimVal(); }
	inline void SetAnimatedMethod(const char n) { m_method.GetAnimVal() = n; }

	inline char GetAnimatedSpacing() const { return m_spacing.GetAnimVal(); }
	inline void SetAnimatedSpacing(const char n) { m_spacing.GetAnimVal() = n; }

  public:
	wxSVGTextPathElement(wxSVGDocument* doc, wxString tagName = wxT("textPath")):
	  wxSVGTextContentElement(doc, tagName) {}
	virtual ~wxSVGTextPathElement() {}
	bool SetAttribute(const wxString& name, const wxString& value);
	virtual const wxSVGDTD GetDtd() const { return wxSVG_TEXTPATH_ELEMENT; }
};

#endif // WX_SVG_TEXT_PATH_ELEMENT_H
