//////////////////////////////////////////////////////////////////////////////
// Name:        SVGLineElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_LINE_ELEMENT_H
#define WX_SVG_LINE_ELEMENT_H

class wxSVGCanvasItem;

#include "SVGElement.h"
#include "SVGTests.h"
#include "SVGLangSpace.h"
#include "SVGExternalResourcesRequired.h"
#include "SVGStylable.h"
#include "SVGTransformable.h"
#include "EventTarget.h"
#include "SVGAnimatedLength.h"
#include "String.h"

class wxSVGLineElement:
  public wxSVGElement,
  public wxSVGTests,
  public wxSVGLangSpace,
  public wxSVGExternalResourcesRequired,
  public wxSVGStylable,
  public wxSVGTransformable,
  public wxEventTarget
{
  protected:
	wxSVGAnimatedLength m_x1;
	wxSVGAnimatedLength m_y1;
	wxSVGAnimatedLength m_x2;
	wxSVGAnimatedLength m_y2;

  public:
	inline wxSVGLength& GetX1() { return m_x1.GetBaseVal(); }
	inline void SetX1(const wxSVGLength& n) { m_x1.GetBaseVal() = n; }

	inline wxSVGLength& GetY1() { return m_y1.GetBaseVal(); }
	inline void SetY1(const wxSVGLength& n) { m_y1.GetBaseVal() = n; }

	inline wxSVGLength& GetX2() { return m_x2.GetBaseVal(); }
	inline void SetX2(const wxSVGLength& n) { m_x2.GetBaseVal() = n; }

	inline wxSVGLength& GetY2() { return m_y2.GetBaseVal(); }
	inline void SetY2(const wxSVGLength& n) { m_y2.GetBaseVal() = n; }

  public:
	inline wxSVGLength& GetAnimatedX1() { return m_x1.GetAnimVal(); }
	inline void SetAnimatedX1(const wxSVGLength& n) { m_x1.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedY1() { return m_y1.GetAnimVal(); }
	inline void SetAnimatedY1(const wxSVGLength& n) { m_y1.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedX2() { return m_x2.GetAnimVal(); }
	inline void SetAnimatedX2(const wxSVGLength& n) { m_x2.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedY2() { return m_y2.GetAnimVal(); }
	inline void SetAnimatedY2(const wxSVGLength& n) { m_y2.GetAnimVal() = n; }


  protected:
	wxSVGCanvasItem* m_canvasItem;
  public:
	inline wxSVGCanvasItem* GetCanvasItem() { return m_canvasItem; }
	inline void SetCanvasItem(wxSVGCanvasItem* canvasItem) { m_canvasItem = canvasItem; }

  public:
	wxSVGLineElement(wxSVGDocument* doc, wxString tagName = wxT("line")):
	  wxSVGElement(doc, tagName), m_canvasItem(NULL) {}
	virtual ~wxSVGLineElement() {}
	wxSVGRect GetBBox();
	bool SetAttribute(const wxString& name, const wxString& value);
	virtual const wxSVGDTD GetDtd() const { return wxSVG_LINE_ELEMENT; }
};

#endif // WX_SVG_LINE_ELEMENT_H
