//////////////////////////////////////////////////////////////////////////////
// Name:        SVGLineElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_LINE_ELEMENT_H
#define WX_SVG_LINE_ELEMENT_H

class wxSVGCanvasItem;

#include "SVGElement.h"
#include "SVGTests.h"
#include "SVGLangSpace.h"
#include "SVGExternalResourcesRequired.h"
#include "SVGStylable.h"
#include "SVGTransformable.h"
#include "EventTarget.h"
#include "SVGAnimatedLength.h"
#include "String.h"

class wxSVGLineElement:
  public wxSVGElement,
  public wxSVGTests,
  public wxSVGLangSpace,
  public wxSVGExternalResourcesRequired,
  public wxSVGStylable,
  public wxSVGTransformable,
  public wxEventTarget
{
  protected:
    wxSVGAnimatedLength m_x1;
    wxSVGAnimatedLength m_y1;
    wxSVGAnimatedLength m_x2;
    wxSVGAnimatedLength m_y2;

  public:
    inline const wxSVGAnimatedLength& GetX1() const { return m_x1; }
    inline void SetX1(const wxSVGAnimatedLength& n) { m_x1 = n; }
    inline void SetX1(const wxSVGLength& n) { m_x1.SetBaseVal(n); }

    inline const wxSVGAnimatedLength& GetY1() const { return m_y1; }
    inline void SetY1(const wxSVGAnimatedLength& n) { m_y1 = n; }
    inline void SetY1(const wxSVGLength& n) { m_y1.SetBaseVal(n); }

    inline const wxSVGAnimatedLength& GetX2() const { return m_x2; }
    inline void SetX2(const wxSVGAnimatedLength& n) { m_x2 = n; }
    inline void SetX2(const wxSVGLength& n) { m_x2.SetBaseVal(n); }

    inline const wxSVGAnimatedLength& GetY2() const { return m_y2; }
    inline void SetY2(const wxSVGAnimatedLength& n) { m_y2 = n; }
    inline void SetY2(const wxSVGLength& n) { m_y2.SetBaseVal(n); }


  protected:
	wxSVGCanvasItem* m_canvasItem;
  public:
	inline wxSVGCanvasItem* GetCanvasItem() { return m_canvasItem; }
	inline void SetCanvasItem(wxSVGCanvasItem* canvasItem) { m_canvasItem = canvasItem; }

  public:
    wxSVGLineElement(wxSVGDocument* doc, wxString tagName = wxT("line")):
      wxSVGElement(doc, tagName), m_canvasItem(NULL) {}
    virtual ~wxSVGLineElement() {}
    wxXmlNode* CloneNode(bool deep = true) { return new wxSVGLineElement(*this); }
    wxSVGRect GetBBox();
    bool SetAttribute(const wxString& name, const wxString& value);
    virtual const wxSVGDTD GetDtd() const { return wxSVG_LINE_ELEMENT; }
};

#endif // WX_SVG_LINE_ELEMENT_H
