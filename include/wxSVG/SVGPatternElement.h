//////////////////////////////////////////////////////////////////////////////
// Name:        SVGPatternElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_PATTERN_ELEMENT_H
#define WX_SVG_PATTERN_ELEMENT_H

#include "SVGElement.h"
#include "SVGURIReference.h"
#include "SVGTests.h"
#include "SVGLangSpace.h"
#include "SVGExternalResourcesRequired.h"
#include "SVGStylable.h"
#include "SVGFitToViewBox.h"
#include "SVGUnitTypes.h"
#include "SVGAnimatedEnumeration.h"
#include "SVGAnimatedTransformList.h"
#include "SVGAnimatedLength.h"
#include "String.h"

class wxSVGPatternElement:
  public wxSVGElement,
  public wxSVGURIReference,
  public wxSVGTests,
  public wxSVGLangSpace,
  public wxSVGExternalResourcesRequired,
  public wxSVGStylable,
  public wxSVGFitToViewBox,
  public wxSVGUnitTypes
{
  protected:
	wxSVGAnimatedEnumeration m_patternUnits;
	wxSVGAnimatedEnumeration m_patternContentUnits;
	wxSVGAnimatedTransformList m_patternTransform;
	wxSVGAnimatedLength m_x;
	wxSVGAnimatedLength m_y;
	wxSVGAnimatedLength m_width;
	wxSVGAnimatedLength m_height;

  public:
	inline char GetPatternUnits() const { return m_patternUnits.GetBaseVal(); }
	inline void SetPatternUnits(const char n) { m_patternUnits.GetBaseVal() = n; }

	inline char GetPatternContentUnits() const { return m_patternContentUnits.GetBaseVal(); }
	inline void SetPatternContentUnits(const char n) { m_patternContentUnits.GetBaseVal() = n; }

	inline wxSVGTransformList& GetPatternTransform() { return m_patternTransform.GetBaseVal(); }
	inline void SetPatternTransform(const wxSVGTransformList& n) { m_patternTransform.GetBaseVal() = n; }

	inline wxSVGLength& GetX() { return m_x.GetBaseVal(); }
	inline void SetX(const wxSVGLength& n) { m_x.GetBaseVal() = n; }

	inline wxSVGLength& GetY() { return m_y.GetBaseVal(); }
	inline void SetY(const wxSVGLength& n) { m_y.GetBaseVal() = n; }

	inline wxSVGLength& GetWidth() { return m_width.GetBaseVal(); }
	inline void SetWidth(const wxSVGLength& n) { m_width.GetBaseVal() = n; }

	inline wxSVGLength& GetHeight() { return m_height.GetBaseVal(); }
	inline void SetHeight(const wxSVGLength& n) { m_height.GetBaseVal() = n; }

  public:
	inline char GetAnimatedPatternUnits() const { return m_patternUnits.GetAnimVal(); }
	inline void SetAnimatedPatternUnits(const char n) { m_patternUnits.GetAnimVal() = n; }

	inline char GetAnimatedPatternContentUnits() const { return m_patternContentUnits.GetAnimVal(); }
	inline void SetAnimatedPatternContentUnits(const char n) { m_patternContentUnits.GetAnimVal() = n; }

	inline wxSVGTransformList& GetAnimatedPatternTransform() { return m_patternTransform.GetAnimVal(); }
	inline void SetAnimatedPatternTransform(const wxSVGTransformList& n) { m_patternTransform.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedX() { return m_x.GetAnimVal(); }
	inline void SetAnimatedX(const wxSVGLength& n) { m_x.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedY() { return m_y.GetAnimVal(); }
	inline void SetAnimatedY(const wxSVGLength& n) { m_y.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedWidth() { return m_width.GetAnimVal(); }
	inline void SetAnimatedWidth(const wxSVGLength& n) { m_width.GetAnimVal() = n; }

	inline wxSVGLength& GetAnimatedHeight() { return m_height.GetAnimVal(); }
	inline void SetAnimatedHeight(const wxSVGLength& n) { m_height.GetAnimVal() = n; }

  public:
	wxSVGPatternElement(wxSVGDocument* doc, wxString tagName = wxT("pattern")):
	  wxSVGElement(doc, tagName) {}
	virtual ~wxSVGPatternElement() {}
	bool SetAttribute(const wxString& name, const wxString& value);
	virtual const wxSVGDTD GetDtd() const { return wxSVG_PATTERN_ELEMENT; }
};

#endif // WX_SVG_PATTERN_ELEMENT_H
