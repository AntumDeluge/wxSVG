//////////////////////////////////////////////////////////////////////////////
// Name:        SVGLocatable.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_LOCATABLE_H
#define WX_SVG_LOCATABLE_H

class wxSVGElement;
class wxSVGElement;

#include "SVGRect.h"
#include "SVGMatrix.h"
#include "SVGElement.h"

class wxSVGLocatable
{
  protected:
    wxSVGElement* m_nearestViewportElement;
    wxSVGElement* m_farthestViewportElement;
    wxSVGMatrix m_screenCTM;

  public:
    inline wxSVGElement* GetNearestViewportElement() const { return m_nearestViewportElement; }
    inline void SetNearestViewportElement(wxSVGElement* n) { m_nearestViewportElement = n; }

    inline wxSVGElement* GetFarthestViewportElement() const { return m_farthestViewportElement; }
    inline void SetFarthestViewportElement(wxSVGElement* n) { m_farthestViewportElement = n; }

    inline const wxSVGMatrix& GetScreenCTM() const { return m_screenCTM; }
    inline void SetScreenCTM(const wxSVGMatrix& n) { m_screenCTM = n; }

  public:
    wxSVGLocatable(): m_nearestViewportElement(NULL), m_farthestViewportElement(NULL) {}
    virtual ~wxSVGLocatable() {}
    virtual wxSVGRect GetBBox() { return wxSVGRect(); }
    static wxSVGRect GetBBox(wxSVGElement* parent);
    virtual wxSVGMatrix GetCTM(){ return wxSVGMatrix(); }
    static wxSVGMatrix GetCTM(wxSVGElement* obj);
    virtual wxSVGMatrix GetTransformToElement(const wxSVGElement& element);
};

#endif // WX_SVG_LOCATABLE_H
