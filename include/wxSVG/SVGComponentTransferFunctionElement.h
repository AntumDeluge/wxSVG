//////////////////////////////////////////////////////////////////////////////
// Name:        SVGComponentTransferFunctionElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_COMPONENT_TRANSFER_FUNCTION_ELEMENT_H
#define WX_SVG_COMPONENT_TRANSFER_FUNCTION_ELEMENT_H

#include "SVGElement.h"
#include "SVGAnimatedEnumeration.h"
#include "SVGAnimatedNumberList.h"
#include "SVGAnimatedNumber.h"
#include "String.h"


enum wxSVG_FECOMPONENTTRANSFER_TYPE
{
  wxSVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN = 0,
  wxSVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1,
  wxSVG_FECOMPONENTTRANSFER_TYPE_TABLE = 2,
  wxSVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3,
  wxSVG_FECOMPONENTTRANSFER_TYPE_LINEAR = 4,
  wxSVG_FECOMPONENTTRANSFER_TYPE_GAMMA = 5
};

class wxSVGComponentTransferFunctionElement:
  public wxSVGElement
{
  protected:
	wxSVGAnimatedEnumeration m_type;
	wxSVGAnimatedNumberList m_tableValues;
	wxSVGAnimatedNumber m_slope;
	wxSVGAnimatedNumber m_intercept;
	wxSVGAnimatedNumber m_amplitude;
	wxSVGAnimatedNumber m_exponent;
	wxSVGAnimatedNumber m_offset;

  public:
	inline char GetType() const { return m_type.GetBaseVal(); }
	inline void SetType(const char n) { m_type.GetBaseVal() = n; }

	inline wxSVGNumberList& GetTableValues() { return m_tableValues.GetBaseVal(); }
	inline void SetTableValues(const wxSVGNumberList& n) { m_tableValues.GetBaseVal() = n; }

	inline float GetSlope() const { return m_slope.GetBaseVal(); }
	inline void SetSlope(const float n) { m_slope.GetBaseVal() = n; }

	inline float GetIntercept() const { return m_intercept.GetBaseVal(); }
	inline void SetIntercept(const float n) { m_intercept.GetBaseVal() = n; }

	inline float GetAmplitude() const { return m_amplitude.GetBaseVal(); }
	inline void SetAmplitude(const float n) { m_amplitude.GetBaseVal() = n; }

	inline float GetExponent() const { return m_exponent.GetBaseVal(); }
	inline void SetExponent(const float n) { m_exponent.GetBaseVal() = n; }

	inline float GetOffset() const { return m_offset.GetBaseVal(); }
	inline void SetOffset(const float n) { m_offset.GetBaseVal() = n; }

  public:
	inline char GetAnimatedType() const { return m_type.GetAnimVal(); }
	inline void SetAnimatedType(const char n) { m_type.GetAnimVal() = n; }

	inline wxSVGNumberList& GetAnimatedTableValues() { return m_tableValues.GetAnimVal(); }
	inline void SetAnimatedTableValues(const wxSVGNumberList& n) { m_tableValues.GetAnimVal() = n; }

	inline float GetAnimatedSlope() const { return m_slope.GetAnimVal(); }
	inline void SetAnimatedSlope(const float n) { m_slope.GetAnimVal() = n; }

	inline float GetAnimatedIntercept() const { return m_intercept.GetAnimVal(); }
	inline void SetAnimatedIntercept(const float n) { m_intercept.GetAnimVal() = n; }

	inline float GetAnimatedAmplitude() const { return m_amplitude.GetAnimVal(); }
	inline void SetAnimatedAmplitude(const float n) { m_amplitude.GetAnimVal() = n; }

	inline float GetAnimatedExponent() const { return m_exponent.GetAnimVal(); }
	inline void SetAnimatedExponent(const float n) { m_exponent.GetAnimVal() = n; }

	inline float GetAnimatedOffset() const { return m_offset.GetAnimVal(); }
	inline void SetAnimatedOffset(const float n) { m_offset.GetAnimVal() = n; }

  public:
	wxSVGComponentTransferFunctionElement(wxSVGDocument* doc, wxString tagName = wxT("")):
	  wxSVGElement(doc, tagName) {}
	virtual ~wxSVGComponentTransferFunctionElement() {}
	bool SetAttribute(const wxString& name, const wxString& value);
};

#endif // WX_SVG_COMPONENT_TRANSFER_FUNCTION_ELEMENT_H
